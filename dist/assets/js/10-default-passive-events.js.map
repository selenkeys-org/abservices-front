{"version":3,"names":[],"mappings":"","sources":["js/10-default-passive-events.js"],"sourcesContent":["(function() {\n  var supportsPassive = eventListenerOptionsSupported();  \n\n  if (supportsPassive) {\n    var addEvent = EventTarget.prototype.addEventListener;\n    overwriteAddEvent(addEvent);\n  }\n\n  function overwriteAddEvent(superMethod) {\n    var defaultOptions = {\n      passive: true,\n      capture: false\n    };\n\n    EventTarget.prototype.addEventListener = function(type, listener, options) {\n      var usesListenerOptions = typeof options === 'object';\n      var useCapture = usesListenerOptions ? options.capture : options;\n\n      options = usesListenerOptions ? options : {};\n      options.passive = options.passive !== undefined ? options.passive : defaultOptions.passive;\n      options.capture = useCapture !== undefined ? useCapture : defaultOptions.capture;\n      \n      superMethod.call(this, type, listener, options);\n    };\n  }\n\n  function eventListenerOptionsSupported() {\n    var supported = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supported = true;\n        }\n      });\n      window.addEventListener(\"test\", null, opts);\n    } catch (e) {}\n\n    return supported;\n  }\n})();"],"file":"10-default-passive-events.js"}